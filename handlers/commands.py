from aiogram import F, Router, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardRemove

from handlers.menu import check_all, get_about_me, menu
from keyboards import *

router = Router()


#                            –°–¢–ê–†–¢
@router.message(Command("start"), F.chat.type == "private")
async def start(message: types.Message):
    await message.delete()
    await menu(message)


@router.message(Command("delete_kb"))
async def delete_keyboard(message: types.Message):
    try:
        await message.delete()
    except:
        await message.answer("–ë–æ—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º‚ùóÔ∏è")
        return

    await message.answer("‚ôªÔ∏è–ö–ª–∞–≤—ñ–∞—Ç—É—Ä—É –≤–∏–¥–∞–ª–µ–Ω–æ‚ôªÔ∏è", reply_markup=ReplyKeyboardRemove())


@router.message(Command("version"))
async def versions(message: types.Message):
    try:
        await message.delete()
    except:
        await message.answer("–ë–æ—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º‚ùóÔ∏è")
        return

    version = (
        "ü§ñ –í–µ—Ä—Å—ñ—è –±–æ—Ç–∞ : release 2.0\n"
        "üêç –í–µ—Ä—Å—ñ—è Python : 3.11.2\n"
        "ü§ñ –í–µ—Ä—Å—ñ—è Aiogram : 3.0.0b7\n"
    )

    await message.answer(version, reply_markup=await hide_kb())


# –†–æ–∑–∫–ª–∞–¥ üìö
@router.message(Command("schedule"))
async def schedule(message: types.Message):
    try:
        await message.delete()
    except:
        await message.answer("–ë–æ—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º‚ùóÔ∏è")
        return

    if not await check_all(message):
        await message.answer(
            "–í–∏ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∑–∞—Ä—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ‚ùóÔ∏è", reply_markup=await hide_kb()
        )
        return

    await message.answer(
        "–ü–µ—Ä–µ–≥–ª—è–¥ —Ä–æ–∑–∫–ª–∞–¥—É ‚¨áÔ∏è", reply_markup=await schedule_kb(message.from_user.id)
    )


@router.message(Command("applicant"))
async def for_applicant(message: types.Message):
    try:
        await message.delete()
    except:
        await message.answer("–ë–æ—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º‚ùóÔ∏è")
        return

    await message.answer(
        "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞ üòµ‚Äçüí´", reply_markup=await applicant_kb()
    )


@router.message(Command("me"))
async def about_me(message: types.Message):
    try:
        await message.delete()
    except:
        await message.answer("–ë–æ—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º‚ùóÔ∏è")
        return

    user_id = message.from_user.id
    url = message.from_user.url
    check, text = await get_about_me(user_id, url)
    if not check:
        await message.answer("–ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å —É –±–æ—Ç—ñ ‚ùóÔ∏è")

    await message.answer(
        text,
        parse_mode="HTML",
        disable_web_page_preview=True,
        reply_markup=await other_back_kb(),
    )


@router.message(Command("other"))
async def others(message: types.Message):
    try:
        await message.delete()
    except:
        await message.answer("–ë–æ—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º‚ùóÔ∏è")
        return

    await message.answer("–Ü–Ω—à–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è ü§Ø", reply_markup=await other_kb())


""" —Å–ø–∏—Å–æ–∫ –¥–ª—è BotFather
start - –∑–∞–ø—É—Å–∫ / –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
schedule - —Ä–æ–∑–∫–ª–∞–¥
me - —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –º–µ–Ω–µ
other - –Ü–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
applicant - –î–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞
version - –≤–µ—Ä—Å—ñ—è
delete_kb - –≤–∏–¥–∞–ª–∏—Ç–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É'
"""
